import type { OrderState } from "../store/slices/orderSlice";

export const sendToTelegram = async (data: OrderState) => {
  if (data.honeypot && data.honeypot.trim() !== "") {
    console.warn("–ë–æ—Ç –æ–±–Ω–∞—Ä—É–∂–µ–Ω, –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.");
    return;
  }

  const chatId = "7911798658";
  const message = `
    üíê –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –±—É–∫–µ—Ç: ${data.bouquetName}
    üë§ –ò–º—è: ${data.name}
    üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${data.phone}
        –ü—Ä–µ–¥–ø–æ—á—Ç–∏—Ç–µ–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–≤—è–∑–∏: ${data.contactMethod}
    üå∏ –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è: ${data.kindOfFlowers}
    üí∞ –ü–æ–≤–æ–¥: ${data.whomGifts}
    üì¶ –ü–æ–∂–µ–ª–∞–Ω–∏—è –ø–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—é: ${data.flowerDesign}
  `.trim();

  try {
    const response = await fetch("/api.php", {
      method: "POST",
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify({
        chat_id: chatId,
        text: message,
        honeypot: data.honeypot,
        parse_mode: "HTML",
      }),
    });

    if (!response.ok) {
      throw new Error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –≤ Telegram");
    }

    console.log("–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!");
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ Telegram:", error);
  }
};
